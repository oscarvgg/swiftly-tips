{"meta":{"title":"Swiftly tips","subtitle":"Tips to improve your Swift knowledge","description":null,"author":"Oscar V. Gonzalez Greco","url":"http://swiftly.tips"},"pages":[],"posts":[{"title":"NÂº 2 - Ditch the semicolon","slug":"2-Ditch-the-semicolon","date":"2017-12-06T23:44:52.000Z","updated":"2017-12-07T00:10:50.090Z","comments":true,"path":"2017/12/07/2-Ditch-the-semicolon/","link":"","permalink":"http://swiftly.tips/2017/12/07/2-Ditch-the-semicolon/","excerpt":"","text":"Every time you use a semicolon (;) in swift, a tree dies ðŸ™„. Donâ€™t roll your eyes! Itâ€™s true. Donâ€™t use them, they are a thing of the past. They make your code look ugly and nasty. Look how ugly: 12let lukeSkywalker = JediKnight();lukeSkywalker.savePrincessLeia(); Now look how beautiful: 12let lukeSkywalker = JediKnight()lukeSkywalker.savePrincessLeia() Nice, clean, perfect ðŸ˜Œ.","categories":[],"tags":[{"name":"style","slug":"style","permalink":"http://swiftly.tips/tags/style/"}]},{"title":"NÂº 1 - Closure retain cycle","slug":"1-closure-retain-cycle","date":"2017-11-30T19:07:08.000Z","updated":"2017-12-07T00:00:27.414Z","comments":true,"path":"2017/11/30/1-closure-retain-cycle/","link":"","permalink":"http://swiftly.tips/2017/11/30/1-closure-retain-cycle/","excerpt":"","text":"Avoid calling self inside your closure as much as possible. 123let tower = &#123; [weak self] rapunzel in return self?.knight.save(rapunzel)&#125; What if self is nil? I know what youâ€™re thinking. Forget unowned! Just pass a capture list with the properties you need inside the closure. 123let tower = &#123; [knight] rapunzel in return knight.save(rapunzel)&#125; And that is how it is done.","categories":[],"tags":[{"name":"memory","slug":"memory","permalink":"http://swiftly.tips/tags/memory/"}]}]}